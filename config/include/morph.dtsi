// vim: set ts=4 sw=4 ft=devicetree:

#define MAKE_MORPH(NAME, BINDING1, BINDIGN2, MOD) \
    / { \
        behaviors { \
            NAME: NAME { \
                compatible = "zmk,behavior-mod-morph"; \
                #binding-cells = <0>; \
                bindings = <BINDING1>, <BINDIGN2>; \
                mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
            }; \
        }; \
    };

// tap: comma | shift + tap: semicolon | ctrl + shift + tap: <
MAKE_MORPH(comma_morph,       &kp COMMA,       &comma_inner_morph, SFT)
MAKE_MORPH(comma_inner_morph, &kp SEMICOLON,   &kp LESS_THAN,      CTL)

// tap: dot | shift + tap: colon | ctrl + shift + tap: >
MAKE_MORPH(dot_morph,         &kp DOT,         &dot_inner_morph,   SFT)
MAKE_MORPH(dot_inner_morph,   &kp COLON,       &kp GREATER_THAN,   CTL)

// tap: parenthesis | shift + tap: bracket | ctrl + shift + tap: brace
MAKE_MORPH(lpar_morph,        &kp LPAR,        &lpar_inner_morph,  SFT)
MAKE_MORPH(lpar_inner_morph,  &kp LBKT,        &kp LBRC,           CTL)
MAKE_MORPH(rpar_morph,        &kp RPAR,        &rpar_inner_morph,  SFT)
MAKE_MORPH(rpar_inner_morph,  &kp RBKT,        &kp RBRC,           CTL)

// tap: escap | shift + tap: ~
MAKE_MORPH(escape_morph,      &lt NAV ESC,     &kp TILDE,          SFT)
// tap: space | shift + tap: `
MAKE_MORPH(space_morph,       &lt NUM SPACE,   &kp GRAVE,          SFT)

// tap: print_screen | shift + tap: mute
// tap: scroll lock  | shift + tap: vol down
// tap: pause        | shift + tap: vol up
MAKE_MORPH(print_morph,       &kp PSCRN,       &kp C_MUTE,         SFT)
MAKE_MORPH(scrl_morph,        &kp SCLK,        &kp C_VOL_DN,       SFT)
MAKE_MORPH(pause_morph,       &kp PAUSE_BREAK, &kp C_VOL_UP,       SFT)

// tap: backspace | shift + tap: delete
MAKE_MORPH(bspc_morph,        &kp BSPC,        &kp DEL,            SFT)

// tap: caps_word | shift + tap: caps lock
MAKE_MORPH(cap_morph,         &caps_word,      &kp CAPS,           SFT)
